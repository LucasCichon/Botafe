@page "/counter"
@inject IJSRuntime JS
@implements IAsyncDisposable

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>


<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

<p>
    <button @onclick="TriggerPrompt">Trigger browser window prompt</button>
</p>

<div>
    <laber>please enter the title</laber>
    <input id="myTitle" type="text" />
    <input type="button" value="alert title" @onclick="myAlert" />
</div>

<div>
    <input type="button" value="click to hide" id="hideBtn" />
</div>


<p>@result</p>

@code {
    private int currentCount = 0;
    private IJSObjectReference? module;
    private string? result;

    private void IncrementCount()
    {
        currentCount++;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await JS.InvokeAsync<IJSObjectReference>("import", "./Pages/Counter.razor.js");
            await module.InvokeAsync<string>("init");
        }
    }

    private async Task TriggerPrompt()
    {
        result = await Prompt("Provide some text");
    }

    private async Task myAlert()
    {
        await module.InvokeAsync<string>("alertTitle");
    }

    public async ValueTask<string?> Prompt(string message) =>
        module is not null ?
            await module.InvokeAsync<string>("showPrompt", message) : null;


    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (module is not null)
        {
            await module.DisposeAsync();
        }
    }
}