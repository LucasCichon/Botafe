@page "/addEventOwner"
@using System.Text.Json
@using BotafeFront.Models
@inject IJSRuntime JSRuntime

<h3>EventOwner Form</h3>

<EditForm EditContext="@editContext" OnValidSubmit="HandleValidSubmit" @onreset="HandleReset">
    <DataAnnotationsValidator/>
    <div class="form-row">
        <div class="form-group col">
            <label>First Name</label>
            <InputText @bind-Value="model.FirstName" class="form-control"/>
            <ValidationMessage For="@(() => model.FirstName)"/>
        </div>
        <div class="form-group col">
            <label>Last Name</label>
            <InputText @bind-Value="model.LastName" class="form-control"/>
            <ValidationMessage For="@(() => model.LastName)"/>
        </div>
        <div class="form-group col">
            <label>Email</label>
            <InputText @bind-Value="model.Email" class="form-control"/>
            <ValidationMessage For="@(() => model.Email)"/>
        </div>
    </div>
    
    <button type="submit" class="btn btn-primary">Submit</button>
    <button type="reset" class="btn btn-warning">Clear</button>
</EditForm>
@code {
    private EditContext editContext;
    private EventOwnersForm model = new ();

    protected override void OnInitialized()
    {
        editContext = new EditContext(model);
    }

    private void HandleValidSubmit()
    {
        var modelJson = JsonSerializer.Serialize(model, new JsonSerializerOptions { WriteIndented = true });
        JSRuntime.InvokeVoidAsync("alert", $"SUCCESS!! :-) \n\n{modelJson}");
    }

    private void HandleReset()
    {
        model = new EventOwnersForm();
        editContext = new EditContext(model);
    }

}
